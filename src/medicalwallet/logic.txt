--회원가입 API--

1. 정보 입력
    1-1. 아이디 입력
        1-1-1. 아이디 입력(클라이언트에서 정규식으로 유효성 확인)
        1-1-2. 중복확인 API 사용
        1-1-3. 성공 시, account_token 발급(유효기간 15분)
    1-2. 휴대폰 번호 입력
        1-2-1. 휴대폰 번호 입력(클라이언트에서 정규식으로 유효성 확인)
        1-2-2. 휴대폰 인증번호 발송 API 사용
        1-2-3. mobile_auth_token 발급(유효기간 3분)
        1-2-4. 휴대폰 인증번호 인증 API 사용(mobile_auth_token과 인증번호를 사용자에게 전송)
        1-2-5. 인증 성공 시, mobile_token 발급(유효기간 15분)
2. 회원가입
    2-1. 회원가입 API 사용(account_token, mobile_token을 같이 전송)
    2-2. account_token, mobile_token 각각 jwt 검증(실제 전달된 account, mobile이 같은지 검증)
    2-3. transaction 실행 및 데이터 저장(sql)
    2-4. 에러 처리 등

--전제 조건--
1. jwt 발급에 필요한 서버별 secret 필요 - 완료
2. 아이디 중복 확인 API 필요
3. 휴대폰 인증 메시지 전송 API 필요(문자 메시지 전송 서버 api-messaging)
4. 휴대폰 인증번호 인증 API 필요



--아이디 중복 확인 API(GET)--
1. 쿼리 데이터(account) 유효성 확인
    - 정규식 사용(알파벳, 숫자 가능 / 6~20자)
2. 데이터베이스 조회
    - 전달된 값으로 DB에 존재 여부 조회
3. 응답값 반환
    - 존재하지 않을 경우 available: true
    - 존재할 경우 available: false

--휴대폰 인증번호 전송 API(POST)--
1. 쿼리 데이터(mobile) 유효성 확인
    - 정규식 사용(01로 시작하는 10~11자리 숫자로 조합된 문자열)
2. 랜덤 인증번호 생성
    - Custom Crypto Module 구현
3. 인증번호와 서버 비밀키를 특정 규칙으로 조합한 값을 사용해, verify


1 번호 받고
2 인증번호 생성
3 인증번호랑 비밀키 섞어서 verifyToken 서명
4 인증번호를 입력 받은 번호로 전송
5 verifyToken 응답

[Medical Wallet] 인증번호는 [123456] 입니다.